#############################################################################
#   ocf - CFEngine3 policy files for deploying Openstack
#   Copyright (C) 2014  WebSupport, s.r.o.
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software Foundation
#   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
#############################################################################

body common control
{

    bundlesequence  =>  {
        # Quit if one instance is already running
        "cf_agent_check",

        # Common bundles first for best practice 
        "def",

        # Agent bundles from here
        "environments",
        "generichost",
        @(config.bundleseq),
    };

    inputs          =>  {
        # Global common bundles
        "common/def.cf",

        # Control body for all agents
        "common/controls/cf_agent.cf",
        "common/controls/cf_execd.cf",
        "common/controls/cf_monitord.cf",
        "common/controls/cf_report.cf",
        "common/controls/cf_runagent.cf",
        "common/controls/cf_serverd.cf",

        # COPBL/Custom libraries
        "common/libraries/cfengine_stdlib.cf",

        # Design Center
        # MARKER FOR CF-SKETCH INPUT INSERTION
        "common/cf-sketch-runfile.cf",

        # User services from here
        "common/init_msg.cf",
        "common/libraries/generic_host.cf",
        "common/libraries/timezone.cf",
        "common/libraries/locale.cf",
        "common/libraries/install_pkg_repo.cf",
        "common/libraries/resolvconf.cf",
        "common/libraries/dhcpd.cf",
        "common/libraries/named.cf",
        "common/libraries/sshdconf.cf",
        "common/libraries/postfix.cf",
        "common/libraries/syslog.cf",
        "common/libraries/ntp.cf",
        "common/libraries/acng.cf",
        "common/libraries/openstack.cf",
        #  body default_retcodes is defined here
        "common/libraries/def_ret_codes.cf",
        "common/libraries/bash_prompt.cf",
        "common/libraries/body_perms.cf",
        "openstack/osmain.cf",

        "$(environments.service)/promises_$(environments.service).cf",
        @(config.inputs),
        };

    version =>  "Community Promises.cf 3.5.3";

}

bundle common environments
{
    classes:
        "commonv1"  or  =>  { classmatch("any") };
        "test_is"   or  =>  { classmatch("test_fai"), classmatch("test_compute1"), classmatch("test_compute2") };
        "phy"       or  =>  { classmatch("fai") };
        "openstack" or  =>  { classmatch("openstack.*")};
    vars:
        phyv1::
            "service"    string    => "phy",policy => "overridable";
}

bundle agent cf_execd_reload
{
    processes:
        "cf-execd"
        comment => "We have to kill cf-execd if we have changed its configuration",
        signals => { "term" },
        action  => if_elapsed("30"), 
        classes => if_repaired("cfexecd_killed");
}

bundle agent cf_agent_check
{
    processes:
        "cf-agent"
           comment => "how many cf-agent's are running (2 is too many)",
           process_count => cf_agent_proc_count("cf-agent");
}

body process_count cf_agent_proc_count(p)
{
    match_range  => "1,2";
    out_of_range_define => { "abort" };
}
