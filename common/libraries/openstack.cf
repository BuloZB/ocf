#############################################################################
#   ocf - CFEngine3 policy files for deploying Openstack
#   Copyright (C) 2014  WebSupport, s.r.o.
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software Foundation
#   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
#############################################################################
bundle agent openstack_config
{
    vars:
        "pkgs[ubuntu][list]"    slist   =>  {   "prips", "ipcalc" };
}


bundle agent os_setup
{
    files:
        "/root/bin/os_cfengine"
            handle          =>  "/root/bin/os_cfengine",
            create          =>  "true",
            perms           =>  mog("0755", "root", "root"),
            edit_line       =>  expand_template("$(def.path[templates])/openstack-provision/os_cfengine"),
            edit_defaults   =>  empty;

    methods:
        "openstack_config"          usebundle   =>  openstack_config;
        "openstack_installrepo"     usebundle   =>  installrepo("openstack");
        "openstack_installpkgs"     usebundle   =>  installpkgs("openstack");
}


# called from libraries bundle
bundle agent os_getinfo_fill_ips
{
    vars:
        "vmtype"    slist   =>  getindices("def.vmdefault");

    commands:
        # fill slist/string variables from openstack
        # fill ips for instances
        "/root/bin/os_cfengine ip_setvar $(vmtype) $(def.vmdefault[$(vmtype)][count]) $(def.vmdefault[$(vmtype)][localnet_startip]) $(def.vmdefault[$(vmtype)][extnet_startip])"
        contain    => in_shell,
        module => "true";
}

#called from openstack controller node
bundle agent os_getinfo
{
    vars:
        "vmtype"    slist   =>  getindices("def.vmdefault");

    commands:
        # fill slist/string variables from openstack
        # fill ips for instances
        "/root/bin/os_cfengine ip_setvar $(vmtype) $(def.vmdefault[$(vmtype)][count]) '$(def.vmdefault[$(vmtype)][localnet_startip])' '$(def.vmdefault[$(vmtype)][extnet_startip])' '$(def.vmdefault[$(vmtype)][stornet_startip])'"
        module => "true";

        # slist nova_list_name, nova_list_name_suspended, nova_list_name_paused, nova_list_name_shutoff
        "/root/bin/os_cfengine nova_list_all"
        module => "true";

        "/root/bin/os_cfengine flavor_list_all"
        module => "true";

        #slist cinder_list_name, cinder_list_id
        # string volume_name_to_id_$name=$id
        # string snapshot_name_to_id_$name=$id
        !os_cfengine_cinder_list_all::
            "/root/bin/os_cfengine cinder_list_all"
            module => "true";

        !os_cfengine_quantum_list_all::
            "/root/bin/os_cfengine quantum_list_all"
            module => "true";
}

