#############################################################################
#   ocf - CFEngine3 policy files for deploying Openstack
#   Copyright (C) 2014  WebSupport, s.r.o.
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software Foundation
#   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
#############################################################################

### bundle pre quantum l3 agenta
bundle agent osnetwork_config
{
    vars:
        "os_services"               slist   =>  { "keystone","nova","glance","cinder","quantum" };
        "os_bind_address"           string  =>  "$(phy_hosts.phy[osmng][ip])";

        "pkgs[debian][list]"        slist   =>  {
                                                "vim",
                                                "mtr",
                                                "apg",
                                                "ntp",
                                                "dstat",
                                            };

        "pkgs[websupport][list]"    slist   =>  {
                                                    "quantum-l3-agent",
                                                    "quantum-metadata-agent",
                                                    "quantum-dhcp-agent",
                                                    "quantum-plugin-openvswitch",
                                                    "quantum-plugin-openvswitch-agent",
                                                    "openvswitch-switch",
                                                    "openvswitch-datapath-dkms",
                                                };
        "pkgs[websupport][repo]"    string  =>  "deb http://repo.websupport.sk/ubuntu precise main";
        "pkgs[websupport][key]"     string  =>  "http://repo.websupport.sk/key.key";
}

bundle agent osnetwork_setup_quantum_agent
{
    vars:
        "networks"              slist   =>  getindices("def.net");
        "l3_agent_network_id"   string  =>  "$(os_cfengine.quantum_l3_agent_net_id)";

    files:
        "/etc/quantum/quantum.conf"
            handle          =>  "osnetwork quantum.conf",
            create          =>  "true",
            perms           =>  mog("0644","root","root"),
            comment         =>  "Configuring /etc/quantum/quantum.conf",
            edit_defaults   =>  empty,
            edit_line       =>  expand_template("$(def.path[templates])/openstack-installation/quantum/quantum.conf"),
            classes         =>  if_repaired("quantum_restart");

        "/etc/quantum/plugins/openvswitch/ovs_quantum_plugin.ini"
            handle          =>  "osnetwork ovs_quantum_plugin.ini",
            create          =>  "true",
            perms           =>  mog("0644","root","root"),
            comment         =>  "Configuring /etc/quantum/plugins/openvswitch/ovs_quantum_plugin.ini",
            edit_defaults   =>  empty,
            edit_line       =>  expand_template("$(def.path[templates])/openstack-installation/quantum/plugins/openvswitch/ovs_quantum_plugin.ini"),
            classes         =>  if_repaired("quantum_restart");

        "/etc/quantum/l3_agent.ini"
            handle          =>  "osnetwork l3_agent.ini",
            create          =>  "true",
            perms           =>  mog("0644","root","root"),
            comment         =>  "Configuring /etc/quantum/l3_agent.ini",
            edit_defaults   =>  empty,
            edit_line       =>  expand_template("$(def.path[templates])/openstack-installation/quantum/l3_agent.ini"),
            classes         =>  if_repaired("quantum_restart");

        "/etc/quantum/metadata_agent.ini"
            handle          =>  "osnetwork metadata_agent.ini",
            create          =>  "true",
            perms           =>  mog("0644","root","root"),
            comment         =>  "Configuring /etc/quantum/metadata_agent.ini",
            edit_defaults   =>  empty,
            edit_line       =>  expand_template("$(def.path[templates])/openstack-installation/quantum/metadata_agent.ini"),
            classes         =>  if_repaired("quantum_restart");

        "/etc/quantum/dhcp_agent.ini"
            handle          =>  "osnetwork dhcp_agent.ini",
            create          =>  "true",
            perms           =>  mog("0644","root","root"),
            comment         =>  "Configuring /etc/quantum/dhcp_agent.ini",
            edit_defaults   =>  empty,
            edit_line       =>  expand_template("$(def.path[templates])/openstack-installation/quantum/dhcp_agent.ini"),
            classes         =>  if_repaired("quantum_restart");

    commands:
        quantum_restart|!quantum_local_dhcp_agent_ok::
            "/bin/echo /usr/sbin/service quantum-dhcp-agent restart";
        quantum_restart|!quantum_local_l3_agent_ok::
            "/bin/echo /usr/sbin/service quantum-l3-agent restart";
        quantum_restart|!quantum_local_openvswitch_agent_ok::
            "/bin/echo /usr/sbin/service quantum-plugin-openvswitch-agent restart";
        quantum_restart::
            "/bin/echo /usr/sbin/service quantum-metadata-agent restart";
}

bundle agent osnetwork_main {
    methods:
        "osnetwork_config"              usebundle   =>  osnetwork_config;
        "osnetwork_installrepo"         usebundle   =>  installrepo("osnetwork");
        "onetwork_installpkgs"          usebundle   =>  installpkgs("osnetwork");
        "osmng_setup_getinfo"           usebundle   =>  osmng_setup_getinfo;
        "osnetwork_setup_quantum_agent" usebundle   =>  osnetwork_setup_quantum_agent;
}
